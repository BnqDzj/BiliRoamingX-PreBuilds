# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: BiliRoamingX PreBuilds

on:
  workflow_dispatch:
    inputs:
      UseSource:
        description: 'Use Source code'
        type: boolean
        default: false
        required: true
  repository_dispatch:
    types: [BiliRoamingX-PreBuilds]


jobs:
  BiliRoamingX-Releases-PreBuilds:
    name: BiliRoamingX Releases PreBuilds
    if: ${{ github.event.inputs.UseSource != 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Crate Dir
        run: |
          sudo mkdir -p /Downloads/
          sudo chmod -R 777 /Downloads/

      - name: Checkout
        uses: actions/checkout@main
  
      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: 3.13
          check-latest: true
          allow-prereleases: true
  
      - name: Set up requests
        run: |
          pip install requests
  
      - name: run Releases-PreBuilds.py
        env:
          Folder_Path: /Downloads/
          PAT: ${{secrets.PAT}}
        run: |
          python Releases-PreBuilds.py
  
      - name: Set up Java
        uses: actions/setup-java@main
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'
          check-latest: true

      - name: Run ReVanced CLI
        run: |
          cd /Downloads/
          java -jar /Downloads/revanced-cli.jar patch --merge /Downloads/integrations.apk --patch-bundle /Downloads/patches.jar --signing-levels 1,2,3 /Downloads/BiliBili.apk
          rm -rf /Downloads/*temporary-files

      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: BiliRoamingX PreBuilds
          path: /Downloads/

      - name: Create Release and Upload Release Asset
        uses: ncipollo/release-action@main
        with:
          artifacts: |
            /Downloads/*patched*
          name: "Latest Releases"
          body: "Latest Releases"
          tag: "Latest Releases"
          allowUpdates: true
          artifactErrorsFailBuild: true
          prerelease: false
          token: ${{ secrets.PAT }}
  
      - name: Delete old workflow run using Personal Token
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0

  BiliRoamingX-Source-PreBuilds:
    name: BiliRoamingX Source PreBuilds
    if: ${{ github.event.inputs.UseSource == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Crate Dir
        run: |
          sudo mkdir -p /Downloads/
          sudo chmod -R 777 /Downloads/

      - name: Checkout
        uses: actions/checkout@main
  
      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: 3.13
          check-latest: true
          allow-prereleases: true
  
      - name: Set up requests
        run: |
          pip install requests
  
      - name: run Source-PreBuilds.py
        env:
          Folder_Path: /Downloads/
          PAT: ${{secrets.PAT}}
        run: |
          python Source-PreBuilds.py
  
      - name: Set up Java
        uses: actions/setup-java@main
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'
          check-latest: true

      - name: Cache gradle
        uses: actions/cache@main
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/*.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Retrieve version
        run: |
          cd /Downloads/
          git clone --recurse-submodules https://github.com/BiliRoamingX/BiliRoamingX.git
          cd BiliRoamingX
          version=`awk -F "=" '$1 == "version" {print $2}' gradle.properties`
          commit_count=`git rev-list HEAD --count`
          version="${version}.r${commit_count}"
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Build BiliRoamingX
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          cd /Downloads/BiliRoamingX/
          ./gradlew --no-daemon -Dorg.gradle.jvmargs=-Xmx2g -Pversion=$VERSION dist
          mv /Downloads/BiliRoamingX/build/*integrations*.apk /Downloads/integrations.apk
          mv /Downloads/BiliRoamingX/build/*patches*.jar /Downloads/patches.jar

      - name: Run ReVanced CLI
        run: |
          cd /Downloads/
          java -jar /Downloads/revanced-cli.jar patch --merge /Downloads/integrations.apk --patch-bundle /Downloads/patches.jar --signing-levels 1,2,3 /Downloads/BiliBili.apk
          rm -rf /Downloads/*temporary-files

      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: BiliRoamingX PreBuilds
          path: /Downloads/

      - name: Create Release and Upload Release Asset
        uses: ncipollo/release-action@main
        with:
          artifacts: |
            /Downloads/*patched*
          name: "Latest Source"
          body: "Latest Source"
          tag: "Latest Source"
          allowUpdates: true
          artifactErrorsFailBuild: true
          prerelease: false
          token: ${{ secrets.PAT }}
  
      - name: Delete old workflow run using Personal Token
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
